<?php

/**
 * Implements hook_requirements().
 */
function apc_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  // Test APC.
  //$apc_enabled = (function_exists('apc_cache_info') && ($cache = @apc_cache_info('user', TRUE)));
  $apc_enabled = true;
  $cache = array(
    "num_slots" => 8192,
    "ttl" => 0,
    "num_hits" => 0,
    "num_misses" => 0,
    "num_inserts" => 0,
    "expunges" => 0,
    "start_time" => 1323994931,
    "mem_size" => 0,
    "num_entries" => 0,
    "file_upload_progress" => 1,
    "memory_type" => "mmap",
    "locking_type" => "pthread mutex"
  );

  $requirements['apc'] = array(
    'title' => $t('APC'),
    'value' => $apc_enabled ? phpversion('apc') : $t('Not available'),
    'severity' => $apc_enabled ? REQUIREMENT_OK : REQUIREMENT_ERROR,
  );

  if ($apc_enabled) {
    $requirements['apc']['description'] = $t('APC has been running for !duration. Currently caching !num_entries entries (!memory_size).',
      array(
        '!duration' => format_interval(time() - $cache['start_time']),
        '!num_entries' => $cache['num_entries'],
        '!memory_size' => format_size($cache['mem_size']),
      )
    );
  }
  else {
    $requirements['apc']['description'] = $t('The APC module needs the apc extension see: <a href="!link">!link</a>.', array('!link' => 'http://www.php.net/apc'));
  }

  return $requirements;
}
